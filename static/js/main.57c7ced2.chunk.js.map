{"version":3,"sources":["components/services/galery_service.js","components/top_background/topBackground.js","components/top_headers/topHeaders.js","components/gallery_page/gallery_categ_card/no_photo_yet.jpeg","components/spinner/index.js","components/spinner/spinner.js","components/gallery_page/gallery_categ_card/galeryCategoryCard.js","components/gallery_page/gallery_categ_card/index.js","components/gallery_page/index.js","components/gallery_page/galleryPage.js","components/category_page/category_image_card/index.js","components/category_page/category_image_card/categoryImageCard.js","components/category_page/index.js","components/category_page/categoryPage.js","components/app/index.js","components/app/app.js","index.js"],"names":["GalleryService","getResource","url","a","fetch","_apiUrlBase","res","ok","Error","status","json","getAllGalleries","galleries","getCategoryImages","path","images","getImageExample","width","height","fullPath","image","_extractId","item","match","_transformGallrey","gallery","isSet","name","this","data","TopBackground","className","TopHeaders","subHeaderTxt","Col","md","Spinner","GaleryCategoryCard","state","imgFullPath","srcImg","no_image_yet","loading","props","imgPath","setState","spinner","card","lg","sm","Component","CardView","to","src","alt","GalleryPage","galleryService","dynamGaleriesRender","galeriesArr","map","fullpath","then","allGaleries","galleryCards","Container","Row","CategoryImageCard","class","CategoryPage","dynamImagesRender","imagesArr","categPath","allImages","console","log","categoryImageCards","categName","App","dynamRoutesRender","categoryRoutes","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8aACqBA,E,WAEnB,aAAe,IAAD,gCAMdC,YANc,uCAMA,WAAOC,GAAP,eAAAC,EAAA,sEAEMC,MAAM,GAAD,OAAI,EAAKC,aAAT,OAAuBH,IAFlC,WAENI,EAFM,QAIFC,GAJE,sBAIU,IAAIC,MAAJ,iCAAoC,EAAKH,YAAzC,2BAAuEC,EAAIG,OAA3E,YAJV,uBAMCH,EAAII,OANL,mFANA,2DAgBdC,gBAhBc,sBAgBI,4BAAAR,EAAA,sEACQ,EAAKF,YAAL,YADR,cACVW,EADU,yBAETA,GAFS,2CAhBJ,KAwBdC,kBAxBc,uCAwBM,WAAOC,GAAP,eAAAX,EAAA,sEACK,EAAKF,YAAL,mBAA6Ba,IADlC,cACVC,EADU,yBAETA,GAFS,2CAxBN,2DA6BdC,gBA7Bc,sBA6BI,8CAAAb,EAAA,6DAAOc,EAAP,+BAAe,IAAKC,EAApB,+BAA6B,IAAKC,EAAlC,+BAA6C,eAA7C,SACI,EAAKlB,YAAL,kBAA4BgB,EAA5B,YAAqCC,EAArC,YAA+CC,IADnD,cACVC,EADU,yBAETA,GAFS,2CA7BJ,KAkDdC,WAAa,SAACC,GAEV,OAAOA,EAAKpB,IAAIqB,MADC,eACe,IApDtB,KAuDdC,kBAAoB,SAACC,GACjB,MAAO,CAEHX,KAAM,EAAKY,MAAMD,EAAQX,MACzBa,KAAM,EAAKD,MAAMD,EAAQE,QA1D/BC,KAAKvB,YAAc,4B,yCAyCrB,SAAMwB,GACF,OAAIA,GAGO,iB,oCC/BFC,EAZO,WAGlB,OACI,qBAAKC,UAAU,iBAAf,SAEI,qBAAKA,UAAU,aAAf,kB,QCUGC,G,MAfI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAGjB,OAGI,cADA,CACCC,EAAA,EAAD,CAAKC,GAAI,GAAT,UAEI,6CACA,qBAAIJ,UAAU,aAAd,cAA6BE,EAA7B,OACA,qBAAKF,UAAU,4BCjBZ,MAA0B,0CCC1BK,G,MCEC,WACZ,OACI,qBAAKL,UAAU,mBAAf,SACI,sBAAKA,UAAU,WAAf,UAA0B,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,iCCKhLM,G,kNAEjBC,MAAQ,CACJX,KAAM,GACNb,KAAM,GACNyB,YAAa,GACbC,OAAQC,EAERC,SAAS,G,uDAGb,WACI,MAA8Bd,KAAKe,MAA5BhB,EAAP,EAAOA,KAAMb,EAAb,EAAaA,KAAM8B,EAAnB,EAAmBA,QACnBhB,KAAKiB,SAAS,CAAClB,OAAMb,OAAM4B,SAAS,IAGZ,qBAAbE,GACPhB,KAAKiB,SAAS,CACVL,OAAO,4CAAD,OAA8CI,GACpDF,SAAS,M,oBAMrB,WAEI,MAAsCd,KAAKU,MAApCX,EAAP,EAAOA,KAAMb,EAAb,EAAaA,KAAM0B,EAAnB,EAAmBA,OAAQE,EAA3B,EAA2BA,QAErBI,EAAUJ,EAAU,cAAC,EAAD,IAAa,KACjCK,EAASL,EAAmE,KAAxD,cAAC,EAAD,CAAUf,KAAMA,EAAMa,OAAQA,EAAQ1B,KAAMA,IAEtE,OAEI,eAACoB,EAAA,EAAD,CAAKc,GAAI,EAAGb,GAAI,EAAGc,GAAI,EAAvB,UAEKH,EACAC,S,GArC+BG,cA4C1CC,EAAW,SAAC,GAA0B,IAAzBxB,EAAwB,EAAxBA,KAAMa,EAAkB,EAAlBA,OAAQ1B,EAAU,EAAVA,KAC7B,OACI,mCACI,cAAC,IAAD,CAAMsC,GAAE,WAAQtC,EAAR,KAAR,SACI,sBAAKiB,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKsB,IAAKb,EAAQc,IAAI,UAE1B,sBAAKvB,UAAU,cAAf,cAA+BJ,EAA/B,eC7DLU,ICAAkB,G,kNCWXC,eAAiB,IAAIxD,E,EAErBsC,MAAQ,CACJ1B,UAAW,M,EAYf6C,oBAAsB,SAACC,GACnB,OAAOA,EAAYC,KAAI,SAAClC,GACpB,IAAOE,EAAcF,EAAdE,KAAMb,EAAQW,EAARX,KAGL8C,GAAuC,qBAAlBnC,EAAQL,OAAyBK,EAAQL,OAAU,IAAxEwC,SAMR,OAAO,cAAE,EAAF,CAAqBjC,KAAMA,EAAMb,KAAMA,EAAM8B,QAASgB,Q,uDApBrE,WAAqB,IAAD,OAEhBhC,KAAK4B,eAAe7C,kBACfkD,MAAM,SAACC,GACJ,EAAKjB,SAAS,CAACjC,UAAWkD,EAAYlD,iB,oBAqBlD,WAEI,IAAOA,EAAagB,KAAKU,MAAlB1B,UACP,IAAKA,EAAc,OAAO,iDAE1B,IAAMmD,EAAenC,KAAK6B,oBAAoB7C,GAE9C,OACI,yBAASmB,UAAU,UAAnB,SACQ,eAACiC,EAAA,EAAD,WAGI,cAAE,EAAF,IAEA,cAACA,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAGI,cAAE,EAAF,CAAahC,aAAa,cAGzB8B,gB,GAtDQb,cCT1BgB,G,kKCUX,WAEI,MAAwBtC,KAAKe,MAAtBhB,EAAP,EAAOA,KAAMiB,EAAb,EAAaA,QAEb,OAEI,cAACV,EAAA,EAAD,CAAKc,GAAI,EAAGb,GAAI,EAAGc,GAAI,EAAvB,SAEI,qBAAKkB,MAAM,aAAX,SACI,qBAAKA,MAAM,YAAX,SACI,qBAAKd,IAAG,mDAA+CT,GAAYU,IAAK3B,c,GAdjDuB,cCNhCkB,G,kNCUXZ,eAAiB,IAAIxD,E,EAErBsC,MAAQ,CACJvB,OAAQ,M,EAaZsD,kBAAoB,SAACC,GACjB,OAAOA,EAAUX,KAAI,SAACvC,GAClB,IAAOO,EAAkBP,EAAlBO,KAAMiC,EAAYxC,EAAZwC,SASb,OAAO,cAAE,EAAF,CAAoBjC,KAAMA,EAAOiB,QAASgB,Q,uDArBzD,WAAqB,IAAD,OACTW,EAAa3C,KAAKe,MAAlB4B,UAEP3C,KAAK4B,eAAe3C,kBAAkB0D,GACjCV,MAAM,SAACW,GACJ,EAAK3B,SAAS,CAAC9B,OAAQyD,EAAUzD,SACjC0D,QAAQC,IAAI,EAAKpC,MAAMvB,a,oBAoBnC,WAEI,IAAOA,EAAUa,KAAKU,MAAfvB,OACP,IAAKA,EAAW,OAAO,iDAEvB,IAAM4D,EAAqB/C,KAAKyC,kBAAkBtD,GAElD,OACI,yBAASgB,UAAU,UAAnB,SACI,eAACiC,EAAA,EAAD,WAGI,cAAE,EAAF,IAEA,cAACA,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAGI,cAAE,EAAF,CAAehC,aAAcL,KAAKe,MAAMiC,YAWtCD,gB,GA9DYzB,cCT3B2B,G,kNCUXrB,eAAiB,IAAIxD,E,EAErBsC,MAAQ,CACJ1B,UAAW,M,EAYfkE,kBAAoB,SAACpB,GACjB,OAAOA,EAAYC,KAAI,SAAClC,GACpB,IAAOX,EAAcW,EAAdX,KAAMa,EAAQF,EAARE,KAEb,OACI,cAAC,IAAD,CAAOb,KAAI,WAAMA,GAAjB,SACI,cAAC,EAAD,CAAcyD,UAAWzD,EAAM8D,UAAWjD,U,uDAf1D,WAAqB,IAAD,OAEhBC,KAAK4B,eAAe7C,kBACfkD,MAAM,SAACC,GACJ,EAAKjB,SAAS,CAACjC,UAAWkD,EAAYlD,YACtC6D,QAAQC,IAAI,EAAKpC,MAAM1B,gB,oBAiBnC,WAEI,IAAOA,EAAagB,KAAKU,MAAlB1B,UAEP,IAAKA,EAAc,OAAO,iDAE1B,IAAMmE,EAAiBnD,KAAKkD,kBAAkBlE,GAE9C,OACI,eAAE,IAAF,WAEI,cAAE,IAAF,CAAQoE,OAAK,EAAClE,KAAK,IAAImE,UAAW1B,IAEhCwB,S,GA1Ce7B,cCFjCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57c7ced2.chunk.js","sourcesContent":["\r\nexport default class GalleryService {  // export default  \r\n\r\n  constructor() {\r\n    this._apiUrlBase = 'http://api.programator.sk'; // !!!  this.  !!!\r\n  }\r\n\r\n  // !!!!!  CRUCIAL THING: Where Promice Will Be Returned ? -> Then .then() Should Be Used  !!!!!\r\n\r\n  getResource = async (url) => { // BASE f() FOR ALL NEXT f()s\r\n\r\n    const res = await fetch(`${this._apiUrlBase}${url}`); //  !!!  await -> fetch()  !!! \r\n\r\n    if (! res.ok) { throw new Error(`!!!!!! COULD NOT FETCH ${this._apiUrlBase}. Error status: ${res.status} !!!!!!`) };\r\n\r\n    return await res.json(); //  !!!  await -> .json()  !!! \r\n  }\r\n\r\n\r\n  getAllGalleries = async () => {\r\n    const galleries = await this.getResource(`/gallery`);\r\n    return galleries;\r\n\r\n    //return galleries.map(this._transformGallrey);\r\n  }\r\n\r\n\r\n  getCategoryImages = async (path) => {\r\n      const images = await this.getResource(`/gallery/${path}`);\r\n      return images;\r\n  }\r\n\r\n  getImageExample = async (width = 300, height = 200, fullPath = 'DFauta/1.jpg') => {\r\n    const image = await this.getResource(`/images/${width}x${height}/${fullPath}`);\r\n    return image;\r\n\r\n    //return galleries.map(this._transformGallrey);\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  // Utils Functions Below\r\n\r\n  isSet(data) {\r\n      if (data) {\r\n          return data\r\n      } else {\r\n          return 'no data :('\r\n      }\r\n  }\r\n\r\n  _extractId = (item) => {\r\n      const idRegExp = /\\/([0-9]*)$/;\r\n      return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  _transformGallrey = (gallery) => {\r\n      return {\r\n          //id: this._extractId(char),\r\n          path: this.isSet(gallery.path),\r\n          name: this.isSet(gallery.name)\r\n      };\r\n  }\r\n\r\n}\r\n\r\n// TESTING EXAMPLE\r\n//const galleryService = new GalleryService();\r\n\r\n// galleryService.getResourse() // !!! return PROMICE !!!\r\n//   .then ( res => console.log(res))\r\n\r\n\r\n// galleryService.getAllGalleries() // !!! return PROMICE !!!\r\n//   .then ( res => console.log(res))","import React from \"react\";\r\n\r\n\r\n\r\nimport './topBackground.sass';\r\n\r\nconst TopBackground = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"backgr_wrapper\">\r\n            {/* <!--  BLURED_TOP_BG  --> */}\r\n            <div className=\"background\"> </div>\r\n            {/* <!--  BLURED_TOP_BG  --> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBackground;","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\n\r\n\r\nimport './topHeaders.sass';\r\n\r\nconst TopHeaders = ({subHeaderTxt}) => {\r\n\r\n\r\n    return (\r\n\r\n        // <!--  HEADER & SUB-HEADER & DIVIDER  -->\r\n        <Col md={12}>\r\n            \r\n            <h1>Fotogaleria</h1>\r\n            <h2 className=\"sub_header\"> {subHeaderTxt} </h2>\r\n            <div className=\"sub_header_divider\"></div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default TopHeaders;","export default __webpack_public_path__ + \"static/media/no_photo_yet.1ed03f96.jpeg\";","import Spinner from './spinner';\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spin\"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React, {Component} from \"react\";\r\nimport { Col } from \"react-bootstrap\";  // lg={3} md={4} sm={6}\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport no_image_yet from './no_photo_yet.jpeg'\r\nimport Spinner from '../../spinner'\r\n\r\n\r\n\r\nimport './galeryCategoryCard.sass';\r\n\r\nexport default class GaleryCategoryCard extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        path: '',\r\n        imgFullPath: '',\r\n        srcImg: no_image_yet,\r\n\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {name, path, imgPath} = this.props;\r\n        this.setState({name, path, loading: false});\r\n        //console.log(`Gallery Name: ${this.state.name},  Gallery Path: ${this.state.path}`);\r\n\r\n        if (typeof(imgPath) !== 'undefined') { \r\n            this.setState({\r\n                srcImg: `http://api.programator.sk/images/300x200/${imgPath}`,\r\n                loading: false\r\n            });  \r\n        }      \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {name, path, srcImg, loading} = this.state;\r\n\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const card = !(loading) ? <CardView name={name} srcImg={srcImg} path={path}  /> : null;\r\n\r\n        return (\r\n\r\n            <Col lg={3} md={4} sm={6}>\r\n\r\n                {spinner}\r\n                {card}\r\n\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nconst CardView = ({name, srcImg, path}) => {\r\n    return (\r\n        <>\r\n            <Link to= { `/${path}/` } > \r\n                <div className=\"category_item\">\r\n                    <div className=\"categ_img\">\r\n                        <img src={srcImg} alt=\"img\" /> \r\n                    </div>\r\n                    <div className=\"categ_title\"> {name} </div>\r\n                </div>\r\n            </Link>\r\n        </>\r\n    )\r\n}","import GaleryCategoryCard from './galeryCategoryCard';\n\nexport default GaleryCategoryCard;","import GalleryPage from './galleryPage';\n\nexport default GalleryPage;","import React, {Component} from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nimport TopBackground from \"../top_background/topBackground\";\r\nimport TopHeaders from \"../top_headers/topHeaders\";\r\nimport GalleryService from \"../services/galery_service\";\r\nimport GaleryCategoryCard from './gallery_categ_card'\r\n\r\nimport './galleryPage.sass';\r\n\r\n\r\nexport default class GalleryPage extends Component {\r\n\r\n    galleryService = new GalleryService();\r\n\r\n    state = {\r\n        galleries: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.galleryService.getAllGalleries()\r\n            .then( (allGaleries) => {\r\n                this.setState({galleries: allGaleries.galleries})\r\n                //console.log(this.state.galleries);\r\n            })\r\n    }\r\n\r\n    dynamGaleriesRender = (galeriesArr) => {  // Arr  of  Objcts\r\n        return galeriesArr.map((gallery) => {\r\n            const {name, path} = gallery;\r\n\r\n            // UNDEFINED FULLPATH (fullpath) param Handling\r\n            const { fullpath } = (typeof gallery.image !== 'undefined' && gallery.image) || {}\r\n            //console.log(`fullpath: ${fullpath}`);\r\n            //if (typeof(fullpath) == 'undefined') { console.log('UNDEF !!!!!!!!!!!!');  }\r\n\r\n            // const label = this.props.renderItem(gallery); // Render f() Pattern\r\n\r\n            return < GaleryCategoryCard name={name} path={path} imgPath={fullpath} />\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {galleries} = this.state;\r\n        if (!galleries) {  return <span> Loading !!! </span>  }\r\n\r\n        const galleryCards = this.dynamGaleriesRender(galleries);\r\n\r\n        return (\r\n            <section className=\"section\">\r\n                    <Container>\r\n\r\n                        {/* <!--  BLURED TOP BackGround  --> */}\r\n                        < TopBackground />\r\n                    \r\n                        <Container>\r\n                            <Row>\r\n                                \r\n                                {/* <!--  H1, H2 & Divider  --> */}\r\n                                < TopHeaders subHeaderTxt='kategorie' />\r\n                                \r\n                                {/* <!--  CARDS  --> */}\r\n                                {galleryCards}\r\n                                \r\n                                {/* <!-- ADD NEW CATEGORY  CARD  --> */}\r\n\r\n\r\n                            </Row> \r\n                        </Container> \r\n                        \r\n                \r\n                    </Container> \r\n                </section>\r\n        )\r\n    }\r\n}","import CategoryImageCard from './categoryImageCard';\n\nexport default CategoryImageCard;","import React, {Component} from \"react\";\r\nimport { Col } from \"react-bootstrap\"; \r\n\r\n//import image from './pexels-photo-186077.jpeg'\r\n\r\nimport './categoryImageCard.sass';\r\n\r\n\r\nexport default class CategoryImageCard extends Component {\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        const {name, imgPath} = this.props;\r\n\r\n        return (\r\n\r\n            <Col lg={3} md={4} sm={6} >\r\n\r\n                <div class=\"photo_item\">\r\n                    <div class=\"photo_img\">\r\n                        <img src={ `http://api.programator.sk/images/400x300/${imgPath}` } alt={name} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Col>\r\n        )\r\n    }\r\n}","import CategoryPage from './categoryPage';\n\nexport default CategoryPage;","import React, {Component} from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nimport GalleryBackground from \"../top_background/topBackground\";\r\nimport GaleryHeader from \"../top_headers/topHeaders\";\r\nimport GalleryService from \"../services/galery_service\";\r\nimport CategoryImageCard from \"./category_image_card\"\r\n\r\nimport './categoryPage.sass';\r\n\r\n\r\nexport default class CategoryPage extends Component {\r\n    galleryService = new GalleryService();\r\n\r\n    state = {\r\n        images: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {categPath} = this.props;\r\n\r\n        this.galleryService.getCategoryImages(categPath)\r\n            .then( (allImages) => {\r\n                this.setState({images: allImages.images})\r\n                console.log(this.state.images);\r\n            })\r\n    }\r\n\r\n    dynamImagesRender = (imagesArr) => {  // Arr  of  Objcts\r\n        return imagesArr.map((image) => {\r\n            const {name, fullpath} = image;\r\n\r\n            // UNDEFINED FULLPATH (fullpath) param Handling\r\n            //const { fullpath } = (typeof image.image !== 'undefined' && image.image) || {}\r\n            //console.log(`fullpath: ${fullpath}`);\r\n            //if (typeof(fullpath) == 'undefined') { console.log('UNDEF !!!!!!!!!!!!');  }\r\n\r\n            // const label = this.props.renderItem(gallery); // Render f() Pattern\r\n\r\n            return < CategoryImageCard name={name}  imgPath={fullpath} />\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {images} = this.state;\r\n        if (!images) {  return <span> Loading !!! </span>  }\r\n\r\n        const categoryImageCards = this.dynamImagesRender(images);\r\n\r\n        return (\r\n            <section className=\"section\">\r\n                <Container>\r\n            \r\n                    {/* <!--  BLURED TOP BackGround  --> */}\r\n                    < GalleryBackground />\r\n                \r\n                    <Container>\r\n                        <Row>\r\n                            \r\n                            {/* <!--  H1, H2 & Divider  --> */}\r\n                            < GaleryHeader subHeaderTxt={this.props.categName} />\r\n                            \r\n                            {/* <!--  IMAGES  --> */}\r\n                            {/* < CategoryImageCard />\r\n                            < CategoryImageCard />\r\n                            < CategoryImageCard />\r\n                            < CategoryImageCard />\r\n                            < CategoryImageCard />\r\n                            < CategoryImageCard />\r\n                            < CategoryImageCard /> */}\r\n\r\n                            { categoryImageCards }\r\n                            \r\n                            \r\n                            {/* <!-- ADD NEW IMAGE  CARD  --> */}\r\n\r\n\r\n                        </Row> \r\n                    </Container> \r\n                    \r\n            \r\n                </Container> \r\n            </section>\r\n        )\r\n    }\r\n}","import App from './app';\n\nexport default App;","import React, {Component} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import { Container, Row } from \"react-bootstrap\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport GalleryService from \"../services/galery_service\";\r\nimport GalleryPage from '../gallery_page'\r\nimport CategoryPage from '../category_page'\r\n\r\n\r\nimport './app.sass';\r\nexport default class App extends Component {\r\n    galleryService = new GalleryService();\r\n\r\n    state = {\r\n        galleries: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.galleryService.getAllGalleries()\r\n            .then( (allGaleries) => {\r\n                this.setState({galleries: allGaleries.galleries})\r\n                console.log(this.state.galleries);\r\n            })\r\n    }\r\n\r\n    dynamRoutesRender = (galeriesArr) => {  // Arr  of  Objcts\r\n        return galeriesArr.map((gallery) => {\r\n            const {path, name} = gallery; \r\n\r\n            return (\r\n                <Route path={`/${path}`} >\r\n                    <CategoryPage categPath={path} categName={name}/>\r\n                </Route>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {galleries} = this.state;\r\n\r\n        if (!galleries) {  return <span> Loading !!! </span>  }\r\n\r\n        const categoryRoutes = this.dynamRoutesRender(galleries);\r\n\r\n        return (\r\n            < Router >\r\n\r\n                < Route exact path='/' component={GalleryPage}/>\r\n\r\n                { categoryRoutes }\r\n                {/* < Route path='/cart' component={}/> */}\r\n                \r\n            </Router>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.sass';\n\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}